from datetime import datetime
import numpy as np

def merge(arr, l, m, r):
    n1 = m - l + 1
    n2 = r - m
 
    # create temp arrays
    L = [0] * (n1)
    R = [0] * (n2)
 
    # Copy data to temp arrays L[] and R[]
    for i in range(0, n1):
        L[i] = arr[l + i]
 
    for j in range(0, n2):
        R[j] = arr[m + 1 + j]
 
    # Merge the temp arrays back into arr[l..r]
    i = 0     # Initial index of first subarray
    j = 0     # Initial index of second subarray
    k = l     # Initial index of merged subarray
 
    while i < n1 and j < n2:
        if L[i] <= R[j]:
            arr[k] = L[i]
            i += 1
        else:
            arr[k] = R[j]
            j += 1
        k += 1
 
    # Copy the remaining elements of L[], if there
    # are any
    while i < n1:
        arr[k] = L[i]
        i += 1
        k += 1
 
    # Copy the remaining elements of R[], if there
    # are any
    while j < n2:
        arr[k] = R[j]
        j += 1
        k += 1
 
# l is for left index and r is right index of the
# sub-array of arr to be sorted
 
 
def mergeSort(arr, l, r):
    if l < r:
 
        # Same as (l+r)//2, but avoids overflow for
        # large l and h
        m = l+(r-l)//2
 
        # Sort first and second halves
        mergeSort(arr, l, m)
        mergeSort(arr, m+1, r)
        merge(arr, l, m, r)
 
 
# Driver code to test above
n = 500
arr = [16, 192, 740, 6, 498, 645, 746, 382, 330, 316, 752, 253, 699, 746, 561, 750, 29, 768, 714, 643, 35, 45, 700, 145, 682, 350, 792, 498, 615, 742, 581, 78, 349, 637, 288, 97, 671, 367, 528, 9, 89, 633, 348, 598, 670, 678, 699, 111, 130, 336, 135, 752, 765, 27, 157, 258, 367, 353, 680, 222, 114, 768, 396, 148, 322, 417, 186, 563, 502, 660, 26, 104, 10, 451, 16, 438, 769, 721, 173, 476, 36, 668, 650, 546, 436, 510, 440, 171, 296, 147, 777, 327, 200, 434, 210, 727, 51, 91, 644, 571, 261, 625, 141, 793, 264, 518, 15, 11, 245, 578, 756, 489, 245, 20, 799, 695, 289, 690, 454, 209, 592, 706, 221, 83, 378, 394, 213, 129, 349, 505, 667, 553, 359, 350, 478, 530, 459, 81, 69, 263, 173, 115, 311, 363, 205, 765, 622, 413, 26, 761, 380, 138, 556, 442, 389, 698, 475, 435, 412, 146, 375, 622, 752, 319, 282, 345, 793, 275, 476, 27, 
360, 754, 438, 764, 606, 656, 28, 422, 665, 629, 316, 441, 96, 695, 99, 34, 5, 397, 493, 673, 97, 338, 493, 118, 455, 685, 443, 707, 202, 514, 736, 673, 364, 682, 512, 729, 338, 365, 526, 643, 25, 356, 766, 487, 346, 734, 318, 96, 264, 59, 570, 594, 754, 405, 646, 111, 795, 708, 669, 322, 679, 135, 10, 460, 237, 216, 427, 60, 356, 516, 698, 600, 388, 232, 81, 301, 542, 409, 115, 419, 138, 456, 773, 80, 691, 795, 431, 684, 203, 671, 187, 134, 621, 353, 208, 170, 71, 177, 263, 343, 324, 552, 
580, 695, 658, 239, 171, 309, 350, 640, 689, 218, 561, 517, 167, 384, 757, 679, 318, 57, 721, 731, 119, 38, 717, 524, 589, 655, 363, 206, 90, 659, 561, 420, 19, 287, 104, 355, 630, 348, 418, 467, 457, 277, 15, 122, 651, 56, 31, 215, 476, 311, 652, 660, 309, 34, 501, 570, 365, 257, 358, 281, 582, 234, 735, 729, 195, 59, 56, 337, 
327, 40, 253, 554, 275, 85, 798, 597, 407, 497, 6, 784, 648, 361, 158, 429, 108, 623, 108, 233, 673, 390, 580, 10, 713, 503, 218, 408, 308, 489, 309, 28, 705, 241, 100, 577, 775, 722, 136, 659, 542, 211, 74, 339, 573, 223, 461, 53, 94, 458, 727, 79, 669, 607, 416, 554, 523, 601, 738, 577, 793, 429, 5, 231, 710, 456, 165, 238, 254, 569, 365, 60, 374, 319, 458, 516, 463, 494, 26, 599, 124, 624, 662, 200, 679, 711, 657, 309, 158, 583, 89, 657, 452, 558, 306, 541, 21, 410, 373, 383, 56, 719, 380, 364, 233, 355, 690, 555, 352, 259, 765, 361, 152, 9, 667, 572, 555, 312, 179, 393, 774, 134, 626, 476, 724, 216, 41, 174, 690, 62, 357, 270, 106, 94, 444, 388, 85, 297, 670, 214, 413, 158, 700, 662, 343, 324, 287, 382, 260, 138, 212, 145, 421, 375, 673, 748, 420, 339, 484, 787]
#for i in range(n):
 #   arr[i] = np.random.randint(1,800)
#print(arr)
#print("\n\n")
begin = datetime.now()
mergeSort(arr, 0, 500-1)
end = datetime.now()
print(arr)
print("\n Tempo de MergeSort (500 elementos): {}".format(end-begin))

"""
Entrada:
[16, 192, 740, 6, 498, 645, 746, 382, 330, 316, 752, 253, 699, 746, 561, 750, 29, 768, 714, 643, 35, 45, 700, 145, 682, 350, 792, 498, 615, 742, 581, 78, 349, 637, 288, 97, 671, 367, 528, 9, 89, 633, 348, 598, 670, 678, 699, 111, 130, 336, 135, 752, 765, 27, 157, 258, 367, 353, 680, 222, 114, 768, 396, 148, 322, 417, 186, 563, 502, 660, 26, 104, 10, 451, 16, 438, 769, 721, 173, 476, 36, 668, 650, 546, 436, 510, 440, 171, 296, 147, 777, 327, 200, 434, 210, 727, 51, 91, 644, 571, 261, 625, 141, 793, 264, 518, 15, 11, 245, 578, 756, 489, 245, 20, 799, 695, 289, 690, 454, 209, 592, 706, 221, 83, 378, 394, 213, 129, 349, 505, 667, 553, 359, 350, 478, 530, 459, 81, 69, 263, 173, 115, 311, 363, 205, 765, 622, 413, 26, 761, 380, 138, 556, 442, 389, 698, 475, 435, 412, 146, 375, 622, 752, 319, 282, 345, 793, 275, 476, 27, 
360, 754, 438, 764, 606, 656, 28, 422, 665, 629, 316, 441, 96, 695, 99, 34, 5, 397, 493, 673, 97, 338, 493, 118, 455, 685, 443, 707, 202, 514, 736, 673, 364, 682, 512, 729, 338, 365, 526, 643, 25, 356, 766, 487, 346, 734, 318, 96, 264, 59, 570, 594, 754, 405, 646, 111, 795, 708, 669, 322, 679, 135, 10, 460, 237, 216, 427, 60, 356, 516, 698, 600, 388, 232, 81, 301, 542, 409, 115, 419, 138, 456, 773, 80, 691, 795, 431, 684, 203, 671, 187, 134, 621, 353, 208, 170, 71, 177, 263, 343, 324, 552, 
580, 695, 658, 239, 171, 309, 350, 640, 689, 218, 561, 517, 167, 384, 757, 679, 318, 57, 721, 731, 119, 38, 717, 524, 589, 655, 363, 206, 90, 659, 561, 420, 19, 287, 104, 355, 630, 348, 418, 467, 457, 277, 15, 122, 651, 56, 31, 215, 476, 311, 652, 660, 309, 34, 501, 570, 365, 257, 358, 281, 582, 234, 735, 729, 195, 59, 56, 337, 
327, 40, 253, 554, 275, 85, 798, 597, 407, 497, 6, 784, 648, 361, 158, 429, 108, 623, 108, 233, 673, 390, 580, 10, 713, 503, 218, 408, 308, 489, 309, 28, 705, 241, 100, 577, 775, 722, 136, 659, 542, 211, 74, 339, 573, 223, 461, 53, 94, 458, 727, 79, 669, 607, 416, 554, 523, 601, 738, 577, 793, 429, 5, 231, 710, 456, 165, 238, 254, 569, 365, 60, 374, 319, 458, 516, 463, 494, 26, 599, 124, 624, 662, 200, 679, 711, 657, 309, 158, 583, 89, 657, 452, 558, 306, 541, 21, 410, 373, 383, 56, 719, 380, 364, 233, 355, 690, 555, 352, 259, 765, 361, 152, 9, 667, 572, 555, 312, 179, 393, 774, 134, 626, 476, 724, 216, 41, 174, 690, 62, 357, 270, 106, 94, 444, 388, 85, 297, 670, 214, 413, 158, 700, 662, 343, 324, 287, 382, 260, 138, 212, 145, 421, 375, 673, 748, 420, 339, 484, 787]

O tempo de execução foi de: 0:00:00.003020
"""